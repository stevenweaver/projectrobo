Reference: http://elinux.org/BeagleBoardUbuntu

> Files Needed

Ubuntu-BeagleBoard/u-boot*
Ubuntu-BeagleBoard/MLO
Ubuntu-BeagleBoard/uImage

> Insert SD Card, boot Beagleboard and stop U-Boot from booting 

	mmc init (or if an old u-boot) mmcinit
	fatload mmc 0:1 0x80300000 u-boot.bin
	nand unlock  (old command, removed in later u-boot's)
	nandecc sw
	nand erase 80000 160000
	nand write 0x80300000 80000 160000
	nand erase 260000 20000   (Clear old U-boot environment, this enables 'boot.scr' scripts)
	reset

	*NOTE: Tested --Dingo_aus 5 December 2009 - C3 factory 2009.1 uses "mmc init" not "mmcinit" and no need for "nand unlock" 
	
> Install the following for Karmic (9.10) 

	sudo apt-get install rootstock
	
> (Optional so far...) Useful Packages:

	linux-firmware,wireless-tools :wifi adapters..
	ntpdate :sync real time clock from network

> (Optional so far ...) GUI's

	xfce4:  xfce4,gdm,xubuntu-gdm-theme,xubuntu-artwork

> DEMO: Images

> Basic Karmic (9.10) Beagleboard xfce4 image: It will download packages necessary (Take a small break)

	sudo ./rootstock --fqdn beagleboard --login ubuntu --password temppwd --imagesize 2G --seed xfce4,gdm --dist karmic \
	--serial ttyS2 --kernel-image http://rcn-ee.net/deb/kernel/beagle/karmic/v2.6.31.9-x9.1/linux-image-2.6.31.9-x9.1_1.0karmic_armel.deb
	
> Upon Completion, you should have: 

	armel-rootfs-<date>.tgz  -> Root file System, dump to ext2/3 partition of SD card
	vmlinuz-2.6.<version>    -> Boot Image, use mkimage to create uImage and dump to the first 								fat16 partition of SD card
	

> Or try: 
	
	sudo ./rootstock --fqdn beagleboard --login ubuntu --password temppwd --imagesize 2G \
	--seed wget,nano,linux-firmware,wireless-tools,usbutils --dist karmic --serial ttyS2 \
	--kernel-image http://rcn-ee.net/deb/kernel/beagle/karmic/v2.6.31.6-x6.0/linux-image-2.6.31.6-x6.0_1.0karmic_armel.deb
	
> Or download the files directly

	wget http://rcn-ee.net/deb/rootfs/ubuntu-9.10-minimal-armel-1.1.tar.7z   (Mirror's welcome)
	7za x ubuntu-9.10-minimal-armel-1.1.tar.7z
	tar xf ubuntu-9.10-minimal-armel-1.1.tar
	
> Development PC: Setup SD Partition's

> Requirements:
	
	sudo apt-get install uboot-mkimage

> Create U-boot compatible uImage (execute command from within the directory holding your downloaded images): 

	mkimage -A arm -O linux -T kernel -C none -a 0x80008000 -e 0x80008000 -n "Linux" -d ./vmlinuz-* ./uImage
	
> Create U-boot boot script: 

	sudo gedit ubuntu.cmd
	
> Paste 
	
	setenv bootcmd 'mmc init; fatload mmc 0:1 0x80300000 uImage; bootm 0x80300000'
	setenv bootargs 'console=ttyS2,115200n8 console=tty0 root=/dev/mmcblk0p2 rootwait rootfstype=ext3 ro vram=12M omapfb.mode=dvi:1280x720MR-16@60'
	boot
	
	*** Note ***  If you created an ext2 root filesystem then change "ext3" above to "ext2"
	
> Create U-boot *.scr file: 

	mkimage -A arm -O linux -T script -C none -a 0 -e 0 -n "Ubuntu 9.10" -d ./ubuntu.cmd ./ubuntu.scr
	
> Mount you "BOOT" partition

	sudo cp uImage /media/BOOT/uImage
	sudo cp ubuntu.src /media/BOOT/ubuntu.src
	
> Mount your "LINUX" partition

	sudo tar xfp armel-rootfs-[date].tgz -C ./tmp

> Karmic: (9.10) boot fixup 

> Edit /etc/fstab 
	
	sudo gedit /media/LINUX/etc/fstab

> Add:

	/dev/mmcblk0p2   /   ext3   errors=remount-ro   0   1

	*** Note *** Note change the above "ext3" to "ext2" if the root filesystem is ext2
	
> Create/Add/Edit /etc/e2fsck.conf 

	sudo gedit /media/LINUX/etc/e2fsck.conf
	
> Add:
	
	[problems]

	# Superblock last mount time is in the future (PR_0_FUTURE_SB_LAST_MOUNT).
	0x000031 = {
    preen_ok = true
    preen_nomessage = true
	} 

	# Superblock last write time is in the future (PR_0_FUTURE_SB_LAST_WRITE).
	0x000032 = {
    preen_ok = true
    preen_nomessage = true
	}
	
> Add karmic updates to /etc/apt/sources.list 

	sudo gedit ./tmp/etc/apt/sources.list
	
> Add:
	
	deb http://ports.ubuntu.com/ubuntu-ports karmic-updates main universe
	
> Finally 

	sync
	sudo umount /media/BOOT
	sudo umount /media/LINUX
	
	
> You can now place the SD card into the BeagleBoard and start up the BeagleBoard.

> Please be patient as the first boot can take a couple of minutes.

> You should be presented with a x-window login screen. If you logged into X windows but do not 	get a full desktop with window management then execute the command "x-session-manager" at 		the terminal. 

> Fix:  Enable Network Access

	Modify /etc/network/interfaces 
	
	auto eth0
	iface eth0 inet dhcp


	



> Packages Installation

	sudo aptitude build-essential
	sudo apt-get install nmap minicom cheese openssh-server libserial-dev
    sudo apt-get install nmap minicom openssh-server libserial-dev
    sudo apt-get install opencv 

http://groups.google.com/group/beagleboard/browse_thread/thread/fe4ce407a37a4700/3e69aa71ae2199e1?lnk=raot

    sudo apt-get install libcv-dev libcv1 libcvaux-dev libcvaux1 \
libhighgui-dev libhighgui1 opencv-doc python opencv ffmpeg
	
	
